/*Daily coding problem 2
UBER
Given an array of integers, return a new array such that each element at index i of the new array is the product of all the numbers in the original array except the one at i.

For example, if our input was [1, 2, 3, 4, 5], the expected output would be [120, 60, 40, 30, 24]. If our input was [3, 2, 1], the expected output would be [2, 3, 6].

Follow-up: what if you can't use division?
*/

#include<stdio.h>
#include<stdlib.h>
#include<string.h>
void mult(int,int*,int,int*);
void main()
{
    int n,i;
    printf("\nEnter the size of array\n");
    scanf("%d",&n);
    int* arr=(int*)malloc(n*sizeof(int));
    int b[n];
    printf("\nEnter the elements of the array\n");
    for(i=0;i<n;i++)
        scanf("%d",arr+i);
    for(i=0;i<n;i++)
        b[i]=arr[i];
    for(i=0;i<n;i++)
        mult(i,arr,n,b);
    printf("\nThe resultant array is\n");
    for(i=0;i<n;i++)
        printf("%d  ",arr[i]);
}
void mult(int i,int* arr,int n,int* b)
{
    int j;
    arr[i]=1;
    for(j=0;j<n;j++)
    {
        if(j==i)
            continue;
        else
            arr[i]*=b[j];
    }
}
